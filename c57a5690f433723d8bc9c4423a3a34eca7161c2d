{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0e41f97b_799ba72a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001292
      },
      "writtenOn": "2022-07-06T15:49:02Z",
      "side": 1,
      "message": "Looks good to me.",
      "revId": "c57a5690f433723d8bc9c4423a3a34eca7161c2d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc52fe8a_edd4fa5d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-07-07T12:52:00Z",
      "side": 1,
      "message": "It seems a little perplexing that we have to copy large pieces of code from the original IPMI repository.  Isn\u0027t there some way to reuse the upstream IPMI code while supplying a different list?  What are the changes we are making here?  How do we identify those and maintain the rest?",
      "revId": "c57a5690f433723d8bc9c4423a3a34eca7161c2d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2bbca6e6_ddab498a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-07-07T16:45:09Z",
      "side": 1,
      "message": "Community suggested to create custom filter for this instead modifying existing implementation in IPMI repository. We can add/modify any filters based on our platforms in future also without any dependency. \n\nThis is the suggestion got from the community and that\u0027s why created custom filter.\n\nhttps://lists.ozlabs.org/pipermail/openbmc/2022-May/030394.html",
      "parentUuid": "fc52fe8a_edd4fa5d",
      "revId": "c57a5690f433723d8bc9c4423a3a34eca7161c2d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "807c7895_0873b254",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-07-08T12:49:37Z",
      "side": 1,
      "message": "Do you think Vernon realized this was going to require copying 500 lines of code from one repo to another?\n\nYou didn\u0027t answer: How do we identify which pieces you\u0027ve modified and how to do we keep it maintained?",
      "parentUuid": "2bbca6e6_ddab498a",
      "revId": "c57a5690f433723d8bc9c4423a3a34eca7161c2d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9665a1c_4b4f098b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-07-08T16:54:59Z",
      "side": 1,
      "message": "No. We have to create a custom filter. For creating custom filter, we need that code framework(Same as IPMI). I referred the below intel-ipmi-oem. They created custom filter with same code as like IPMI. So, I just followed as like intel-ipmi-oem.\n\nhttps://github.com/openbmc/intel-ipmi-oem/blob/master/src/whitelist-filter.cpp\n\n\nHow do we identify which pieces you\u0027ve modified and how to do we keep it maintained?\n\nI Agree, It\u0027s not easy to identify modified code and maintain. It will not show the code diff as new file was created. \n\nIntel is maintaining similar filter code in intel-ipmi-oem.\n\nwe have to compare the files with IPMI repository files to identify the changes. I have modified the below functions in whitelist-filter.cpp\n\nfilterMessage, postInit and cacheRestrictionMode.",
      "parentUuid": "807c7895_0873b254",
      "revId": "c57a5690f433723d8bc9c4423a3a34eca7161c2d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b367411e_e1045929",
        "filename": "src/whitelist-filter.cpp",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-07-07T12:52:00Z",
      "side": 1,
      "message": "Why not use RestrictionMode::interface directly?",
      "revId": "c57a5690f433723d8bc9c4423a3a34eca7161c2d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e06d79fd_514155c2",
        "filename": "src/whitelist-filter.cpp",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-07-07T16:45:09Z",
      "side": 1,
      "message": "Ack. I used as similar to the IPMI implementation. I will check and use RestrictionMode::interface directly.",
      "parentUuid": "b367411e_e1045929",
      "revId": "c57a5690f433723d8bc9c4423a3a34eca7161c2d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}