{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "87e378a3_f2357820",
        "filename": "src/usb-dbg.cpp",
        "patchSetId": 3
      },
      "lineNbr": 911,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-08-27T12:09:47Z",
      "side": 1,
      "message": "This is the default initialization state of a `std::string` and isn\u0027t necessary.",
      "revId": "676191ee16658b461e033f52bf07c3a3794bbfe5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d30f6456_bc2747a0",
        "filename": "src/usb-dbg.cpp",
        "patchSetId": 3
      },
      "lineNbr": 911,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2024-08-27T13:07:00Z",
      "side": 1,
      "message": "this is for re-initial the result string of each postcode.\nI think I should just move `std::string result;` inside the postcodes for loop.",
      "parentUuid": "87e378a3_f2357820",
      "revId": "676191ee16658b461e033f52bf07c3a3794bbfe5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b9eab68_89dfc989",
        "filename": "src/usb-dbg.cpp",
        "patchSetId": 3
      },
      "lineNbr": 917,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-08-27T12:09:47Z",
      "side": 1,
      "message": "Why are we ignoring code in this case?",
      "range": {
        "startLine": 909,
        "startChar": 16,
        "endLine": 917,
        "endChar": 17
      },
      "revId": "676191ee16658b461e033f52bf07c3a3794bbfe5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0905fe20_85dfe266",
        "filename": "src/usb-dbg.cpp",
        "patchSetId": 3
      },
      "lineNbr": 917,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2024-08-27T13:07:00Z",
      "side": 1,
      "message": "In Catalina, I store the first 8 bytes in code (primary), and store full 9 bytes in extra (secondary).\nIn this implementation, the postcode use `extra` for postcode display if the `extra` is not an empty array.",
      "parentUuid": "2b9eab68_89dfc989",
      "range": {
        "startLine": 909,
        "startChar": 16,
        "endLine": 917,
        "endChar": 17
      },
      "revId": "676191ee16658b461e033f52bf07c3a3794bbfe5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88157ae5_0505251d",
        "filename": "src/usb-dbg.cpp",
        "patchSetId": 3
      },
      "lineNbr": 917,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-08-27T13:17:12Z",
      "side": 1,
      "message": "We\u0027ve attempted to discuss this same problem in the bmcweb commit.  The first 8 bytes should go in primary.  The 1 extra byte should go in secondary.  Otherwise we\u0027re never going to be able to upstream that bmcweb support.",
      "parentUuid": "0905fe20_85dfe266",
      "range": {
        "startLine": 909,
        "startChar": 16,
        "endLine": 917,
        "endChar": 17
      },
      "revId": "676191ee16658b461e033f52bf07c3a3794bbfe5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}