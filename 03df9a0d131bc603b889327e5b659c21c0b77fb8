{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "13763cc7_c97b3f9f",
        "filename": "include/types.hpp",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "size_t",
      "range": {
        "startLine": 17,
        "startChar": 4,
        "endLine": 17,
        "endChar": 12
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3cb1aac6_2f87d69f",
        "filename": "include/types.hpp",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "13763cc7_c97b3f9f",
      "range": {
        "startLine": 17,
        "startChar": 4,
        "endLine": 17,
        "endChar": 12
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecd6d8c1_9ab91c41",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "I\u0027m not sure what \"maxHost\" refers to.  Below it looks like you\u0027re using this as an array size for post codes attached to a single host.",
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b254034_e2d8270d",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Hi Patrick, \nI rename maxHost to numOfHosts for the initial size of the array used as below, to record each host dimm loop detect status.",
      "parentUuid": "ecd6d8c1_9ab91c41",
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c7e3b25_eb511d20",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "Does this need to be explicitly typed?",
      "range": {
        "startLine": 47,
        "startChar": 10,
        "endLine": 47,
        "endChar": 18
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2344833a_e07b6505",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "Please refer to AMD in this magic.",
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec9612c8_15beffd4",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2344833a_e07b6505",
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e970467_c06cac77",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c7e3b25_eb511d20",
      "range": {
        "startLine": 47,
        "startChar": 10,
        "endLine": 47,
        "endChar": 18
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ce04ab1_1bcac75b",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "unordered_map?",
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "575d4da6_db2cb33c",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ce04ab1_1bcac75b",
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f154a18d_8f31b2b6",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "Why do we need a separate parameter for this if we already have a vector?\n\nWhy is this sized to uint8_t?",
      "range": {
        "startLine": 83,
        "startChar": 57,
        "endLine": 83,
        "endChar": 64
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11ad22db_4b7ebb46",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "No need for const on POD types as function arguments.",
      "range": {
        "startLine": 83,
        "startChar": 30,
        "endLine": 83,
        "endChar": 35
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5e014d0_237318ef",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11ad22db_4b7ebb46",
      "range": {
        "startLine": 83,
        "startChar": 30,
        "endLine": 83,
        "endChar": 35
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc47bad6_df36930a",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f154a18d_8f31b2b6",
      "range": {
        "startLine": 83,
        "startChar": 57,
        "endLine": 83,
        "endChar": 64
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdcb5d74_a9e53655",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "Should this one be a const\u0026?  Are we really modifying the vector?",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 51
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d18b943_0881689e",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fdcb5d74_a9e53655",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 51
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0a38814_101eb132",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "if (postCodeSize !\u003d amdPostCodeSize) return;\n\nIs this `if constexpr`?  I seem to recall postCodeSize being a meson compile option.",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 87,
        "endChar": 5
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12cc44a0_9491966b",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f0a38814_101eb132",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 87,
        "endChar": 5
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "326638d0_c680ade8",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "Can you document what a \"byte group\" is here?  When I read this initially I was expecting just 2 bytes as if these were fields but then when I read the code below it doesn\u0027t seem like that is the case.",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 101,
        "endChar": 44
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8a66f32_3d8a4c32",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "326638d0_c680ade8",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 101,
        "endChar": 44
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cb5163c_be9e15db",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "Why are these static variables?  Please refactor.",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 108,
        "endChar": 55
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72b1d5fb_5e7feb64",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-05T09:20:52Z",
      "side": 1,
      "message": "Hi Patrick,\nBecause the postcode is a group of incoming from bic, so we have to declare it as static to remain the previous status.\nAfter we got the whole dimm loop pattern, it will store in the global variable dimmLoops.",
      "parentUuid": "9cb5163c_be9e15db",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 108,
        "endChar": 55
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e33c659d_eecb7d8b",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "Prefer to avoid C-style casts in C++ code.",
      "range": {
        "startLine": 110,
        "startChar": 28,
        "endLine": 110,
        "endChar": 36
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10bbc36e_8a57e911",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "Is there an explicit reason for using `at` instead of `[]`?  `at` does bounds checking but I thought you already did that.",
      "range": {
        "startLine": 110,
        "startChar": 42,
        "endLine": 110,
        "endChar": 44
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ace21f37_1d6d2340",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e33c659d_eecb7d8b",
      "range": {
        "startLine": 110,
        "startChar": 28,
        "endLine": 110,
        "endChar": 36
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b37e16b9_d50d17c9",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10bbc36e_8a57e911",
      "range": {
        "startLine": 110,
        "startChar": 42,
        "endLine": 110,
        "endChar": 44
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f22fb102_be00cc41",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "static constexpr?",
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c13412a9_489cfb22",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f22fb102_be00cc41",
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63f8cd86_191a5014",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "This code kind of implies to me that you\u0027re expecting `data` to be exactly 4 bytes long.  If that is the case then please take it as a `std::array` for clarity.\n\nIf it isn\u0027t exactly 4 bytes long then I don\u0027t know how this comparison ends up being successful.",
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18706fdb_090aa171",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Hi Patrick,\nYes, it must be 4 byte. It already filters at the beginning of this detection function.\nI didn\u0027t modify anchorTag to array, because I think comparing vector and array will be more complicated.",
      "parentUuid": "63f8cd86_191a5014",
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "213ec4e0_88d822fa",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "This is especially confusing where we have a struct to store some data but then we have global/static variables in other cases.  Please make this consistent.",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 148,
        "endChar": 61
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86cbfc4c_3bf0705b",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "213ec4e0_88d822fa",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 148,
        "endChar": 61
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "908176eb_f1dafe00",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "spelling.  `detection`",
      "range": {
        "startLine": 154,
        "startChar": 57,
        "endLine": 154,
        "endChar": 66
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e85f72a_8704bb05",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "908176eb_f1dafe00",
      "range": {
        "startLine": 154,
        "startChar": 57,
        "endLine": 154,
        "endChar": 66
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4adab7e_31a5ce32",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 158,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "Are we dropping the dimm locations and the major/minor codes?",
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e76bbb38_434d487b",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 158,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Hi Patrick,\nThe entire the dimm pattern is stored. (Anchor Tag , Total Error Count, Number of Error DIMM, Dimm location, major code, minor code)",
      "parentUuid": "c4adab7e_31a5ce32",
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19febe77_489f63d6",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 177,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "My general preference is to use `auto` whenever possible.  I think findHost returns a `std::optional\u003csize_t\u003e` so there is no need to repeat that here.",
      "range": {
        "startLine": 177,
        "startChar": 4,
        "endLine": 177,
        "endChar": 25
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e558518_b2bb39b6",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 177,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19febe77_489f63d6",
      "range": {
        "startLine": 177,
        "startChar": 4,
        "endLine": 177,
        "endChar": 25
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "707314aa_1c76495b",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 181,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "Would be good for us to consider refactoring all the logging calls to use the lg2 interfaces.  You can certainly ensure new code is using lg2 even if the originally logging APIs are used elsewhere in the file.",
      "range": {
        "startLine": 180,
        "startChar": 0,
        "endLine": 181,
        "endChar": 40
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5194461_0bc335bb",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 181,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-06T02:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "707314aa_1c76495b",
      "range": {
        "startLine": 180,
        "startChar": 0,
        "endLine": 181,
        "endChar": 40
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb806687_0a3ab9ef",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 419,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "Why did we end up with two different IPMI commands doing the same thing?",
      "range": {
        "startLine": 415,
        "startChar": 0,
        "endLine": 419,
        "endChar": 65
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb8d0305_84fec765",
        "filename": "src/biccommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 419,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-05T09:20:52Z",
      "side": 1,
      "message": "Hi Patrick,\nBecause of in bic code different systems (e.g. HD or CL) they use different drivers and cmd to send postcode for different CPU (Intel or AMD). And for compatibility and not affect to the different systems I register this handler.",
      "parentUuid": "bb806687_0a3ab9ef",
      "range": {
        "startLine": 415,
        "startChar": 0,
        "endLine": 419,
        "endChar": 65
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e608a485_7f79d8bd",
        "filename": "src/usb-dbg.cpp",
        "patchSetId": 2
      },
      "lineNbr": 971,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-06-02T11:54:07Z",
      "side": 1,
      "message": "Suggest putting this as a separate commit because I can\u0027t tell how it is related to the rest of the commit and it seems like it is a fix for something.",
      "range": {
        "startLine": 970,
        "startChar": 0,
        "endLine": 971,
        "endChar": 27
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e128dc1_1cf62814",
        "filename": "src/usb-dbg.cpp",
        "patchSetId": 2
      },
      "lineNbr": 971,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-06-05T09:20:52Z",
      "side": 1,
      "message": "Hi Patrick,\nI modified this because of CI would fail and told me to initialize hostPosition.",
      "parentUuid": "e608a485_7f79d8bd",
      "range": {
        "startLine": 970,
        "startChar": 0,
        "endLine": 971,
        "endChar": 27
      },
      "revId": "03df9a0d131bc603b889327e5b659c21c0b77fb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}