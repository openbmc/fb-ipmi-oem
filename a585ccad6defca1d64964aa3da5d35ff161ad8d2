{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "23c4e98c_233e47eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-08-01T16:35:33Z",
      "side": 1,
      "message": "Hi @patrick@stwcx.xyz, @amithash@meta.com, @paligill@gmail.com, @pmb@meta.com, \n\nCould you kindly help review and merge this commit at your convenience?\n\nThank you very much!",
      "revId": "a585ccad6defca1d64964aa3da5d35ff161ad8d2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87335aff_cb5cd8e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-08-15T09:30:33Z",
      "side": 1,
      "message": "Hi @patrick@stwcx.xyz, @amithash@meta.com, @paligill@gmail.com, @pmb@meta.com,\n\nCould you please kindly help review this change and proceed with merging if there are no further concerns?\nThank you very much!",
      "revId": "a585ccad6defca1d64964aa3da5d35ff161ad8d2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5661022a_7ea52484",
        "filename": "meson.build",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-15T14:47:34Z",
      "side": 1,
      "message": "I\u0027m not very pleased that we already have the machine option, but right now the machine option only affects a JSON file that gets loaded.  This is changing it to become a compile difference as well.  I\u0027d prefer we do not do that.\n\nLet\u0027s at least split that part into a separate commit so other parts can get in quicker.",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 45,
        "endChar": 5
      },
      "revId": "a585ccad6defca1d64964aa3da5d35ff161ad8d2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6aeabac4_b5de518b",
        "filename": "meson.build",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-08-18T16:53:52Z",
      "side": 1,
      "message": "Hi @patrick@stwcx.xyz,\n\nThanks for the feedback. If exposing all host firmware types is acceptable, we won’t need the machine option for this anymore. I will remove this Meson logic.",
      "parentUuid": "5661022a_7ea52484",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 45,
        "endChar": 5
      },
      "revId": "a585ccad6defca1d64964aa3da5d35ff161ad8d2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c299a3ba_4566a4b4",
        "filename": "meson.build",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-19T12:24:19Z",
      "side": 1,
      "message": "In the future, please mark as resolved on your own when you believe you\u0027ve taken care of the concern.",
      "parentUuid": "6aeabac4_b5de518b",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 45,
        "endChar": 5
      },
      "revId": "a585ccad6defca1d64964aa3da5d35ff161ad8d2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19ad6d46_b72e87d7",
        "filename": "meson.build",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-08-20T00:55:49Z",
      "side": 1,
      "message": "Understood. Thank you for your review and guidance. Going forward, I’ll mark items as resolved once the issue is addressed.",
      "parentUuid": "c299a3ba_4566a4b4",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 45,
        "endChar": 5
      },
      "revId": "a585ccad6defca1d64964aa3da5d35ff161ad8d2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "837201a6_ff27a996",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 4
      },
      "lineNbr": 594,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-15T14:47:34Z",
      "side": 1,
      "message": "This name is something specific to Yv4.  This isn\u0027t acceptable to be embedded in code.",
      "range": {
        "startLine": 591,
        "startChar": 0,
        "endLine": 594,
        "endChar": 9
      },
      "revId": "a585ccad6defca1d64964aa3da5d35ff161ad8d2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62dee1c9_18b7e267",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 4
      },
      "lineNbr": 594,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-08-18T16:53:52Z",
      "side": 1,
      "message": "Hi @patrick@stwcx.xyz,\n\nThank you for pointing that out, and my apologies for missing that detail. I wasn’t aware this name was Yv4-specific. I plan to remove the hardcoded \"Management_Board\" and identify the BMC by querying the D-Bus interface \"xyz.openbmc_project.Inventory.Item.Bmc.\" Is this approach acceptable, or would you recommend a different interface or property for cross-platform identification?",
      "parentUuid": "837201a6_ff27a996",
      "range": {
        "startLine": 591,
        "startChar": 0,
        "endLine": 594,
        "endChar": 9
      },
      "revId": "a585ccad6defca1d64964aa3da5d35ff161ad8d2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18cf0adc_17b2af36",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 4
      },
      "lineNbr": 594,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-18T20:58:26Z",
      "side": 1,
      "message": "Sounds good.",
      "parentUuid": "62dee1c9_18b7e267",
      "range": {
        "startLine": 591,
        "startChar": 0,
        "endLine": 594,
        "endChar": 9
      },
      "revId": "a585ccad6defca1d64964aa3da5d35ff161ad8d2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bcdea4c4_502a3776",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 4
      },
      "lineNbr": 594,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-08-19T08:23:08Z",
      "side": 1,
      "message": "Thanks for the feedback. I’ve updated the patch to remove the hardcoded name and now use the xyz.openbmc_project.Inventory.Item.Bmc interface for identification. Please let me know if anything else needs changes.",
      "parentUuid": "18cf0adc_17b2af36",
      "range": {
        "startLine": 591,
        "startChar": 0,
        "endLine": 594,
        "endChar": 9
      },
      "revId": "a585ccad6defca1d64964aa3da5d35ff161ad8d2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "043d9945_7a48ec16",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 4
      },
      "lineNbr": 668,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-15T14:47:34Z",
      "side": 1,
      "message": "Why do we need a list?  Can\u0027t we expose all of them?",
      "range": {
        "startLine": 665,
        "startChar": 0,
        "endLine": 668,
        "endChar": 62
      },
      "revId": "a585ccad6defca1d64964aa3da5d35ff161ad8d2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bafc0975_a8a4466b",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 4
      },
      "lineNbr": 668,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-08-18T16:53:52Z",
      "side": 1,
      "message": "Hi @patrick@stwcx.xyz,\n\nThank you for the review. Originally, this phosphor component did not support host-related firmware, so I wasn’t sure whether exposing all host firmware types would be acceptable. If it is, I will implement an automatic, platform-agnostic enumeration to expose all host firmware types.\n\nFor example, on YV4 I can enumerate all objects implementing xyz.openbmc_project.Software.Version under /xyz/openbmc_project/software/hostN via ObjectMapper (GetSubTreePaths). This returns entries including VR and CXL firmware, removing the need for a predefined list and adapting to different platforms automatically. Here is a sample result:\n\u0027\u0027\u0027\nroot@bmc:~# dbus-send --system --print-reply --dest\u003dxyz.openbmc_project.ObjectMapper /xyz/openbmc_project/object_mapper xyz.openbmc_project.ObjectMapper.GetSubTreePaths string:\"/xyz/openbmc_project/software/host8\" int32:0 array:string:\"xyz.openbmc_project.Software.Version\"\nmethod return time\u003d1755530817.740166 sender\u003d:1.34 -\u003e destination\u003d:1.966 serial\u003d159040 reply_serial\u003d2\n   array [\n      string \"/xyz/openbmc_project/software/host8/Sentinel_Dome_bic\"\n      string \"/xyz/openbmc_project/software/host8/Sentinel_Dome_bios\"\n      string \"/xyz/openbmc_project/software/host8/Sentinel_Dome_cpld\"\n      string \"/xyz/openbmc_project/software/host8/Sentinel_Dome_vr_pvdd11_s3\"\n      string \"/xyz/openbmc_project/software/host8/Sentinel_Dome_vr_pvddcr_cpu0\"\n      string \"/xyz/openbmc_project/software/host8/Sentinel_Dome_vr_pvddcr_cpu1\"\n      string \"/xyz/openbmc_project/software/host8/Wailua_Falls_bic\"\n      string \"/xyz/openbmc_project/software/host8/Wailua_Falls_cxl_1\"\n      string \"/xyz/openbmc_project/software/host8/Wailua_Falls_cxl_2\"\n      string \"/xyz/openbmc_project/software/host8/Wailua_Falls_vr_pvddq_ab_asic1\"\n      string \"/xyz/openbmc_project/software/host8/Wailua_Falls_vr_pvddq_ab_asic2\"\n      string \"/xyz/openbmc_project/software/host8/Wailua_Falls_vr_pvddq_cd_asic1\"\n      string \"/xyz/openbmc_project/software/host8/Wailua_Falls_vr_pvddq_cd_asic2\"\n   ]\n\n\u0027\u0027\u0027",
      "parentUuid": "043d9945_7a48ec16",
      "range": {
        "startLine": 665,
        "startChar": 0,
        "endLine": 668,
        "endChar": 62
      },
      "revId": "a585ccad6defca1d64964aa3da5d35ff161ad8d2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "744eb4e6_6740fcd5",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 4
      },
      "lineNbr": 668,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-18T20:58:26Z",
      "side": 1,
      "message": "The `/software/hostN` paths are the temporary settingsd values that should be going away once we have PLDM support for firmware done, right?  You probably don\u0027t want to hard-code a mapper lookup like that.",
      "parentUuid": "bafc0975_a8a4466b",
      "range": {
        "startLine": 665,
        "startChar": 0,
        "endLine": 668,
        "endChar": 62
      },
      "revId": "a585ccad6defca1d64964aa3da5d35ff161ad8d2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a74c724_b09f7365",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 4
      },
      "lineNbr": 668,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-08-19T08:23:08Z",
      "side": 1,
      "message": "Hi @patrick@stwcx.xyz,\n\nThank you for the clarification. Based on your comment, I understand that relying on the /software/hostN (settingsd) paths is not recommended and may be unstable going forward.\n\nTo avoid impacting the current Gerrit change, I’ve submitted an updated patch that temporarily removes the host firmware retrieval code. I’d prefer to pause further work on this feature until the PLDM-based firmware support and the corresponding D-Bus model are finalized. Once those are in place, I can revisit this and propose a PLDM-aligned implementation.\n\nPlease let me know if this plan sounds reasonable, or if you would suggest a different interim approach. Thank you very much!",
      "parentUuid": "744eb4e6_6740fcd5",
      "range": {
        "startLine": 665,
        "startChar": 0,
        "endLine": 668,
        "endChar": 62
      },
      "revId": "a585ccad6defca1d64964aa3da5d35ff161ad8d2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}