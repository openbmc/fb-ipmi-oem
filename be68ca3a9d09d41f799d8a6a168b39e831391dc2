{
  "comments": [
    {
      "key": {
        "uuid": "17d6cb8e_1b431ade",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 588,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-01-11T22:59:10Z",
      "side": 1,
      "message": "I don\u0027t know why this is called \u0027oneTimePath\u0027 because it isn\u0027t always that.",
      "range": {
        "startLine": 588,
        "startChar": 30,
        "endLine": 588,
        "endChar": 41
      },
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36a03a13_58719a80",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 588,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2021-01-19T08:10:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "17d6cb8e_1b431ade",
      "range": {
        "startLine": 588,
        "startChar": 30,
        "endLine": 588,
        "endChar": 41
      },
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79257d74_79ad5f0a",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 589,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-01-11T22:59:10Z",
      "side": 1,
      "message": "Why is this capitalized?",
      "range": {
        "startLine": 589,
        "startChar": 30,
        "endLine": 589,
        "endChar": 44
      },
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b97324ed_f88aae70",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 589,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2021-01-19T08:10:41Z",
      "side": 1,
      "message": "I will update this.",
      "parentUuid": "79257d74_79ad5f0a",
      "range": {
        "startLine": 589,
        "startChar": 30,
        "endLine": 589,
        "endChar": 44
      },
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32c144c6_eb38920f",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 634,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-01-11T22:59:10Z",
      "side": 1,
      "message": "Thank you for moving the configuration to the \u0027settings\u0027 service.  I much prefer that implementation rather than this IPMI-specific file.\n\nWhy do we still need the code from line 625-633?  Can\u0027t we just store entirely in the settings service now rather than using this OEM file for this data?",
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad4576a4_beb0147e",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 634,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2021-01-19T08:10:41Z",
      "side": 1,
      "message": "We can set/get Boot Mode and Boot Source in settings service, but remaining boot order cannot be stored in dbus objects, so we are storing those boot order in oemData.",
      "parentUuid": "32c144c6_eb38920f",
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "459aad08_7f519402",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 634,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-01-19T22:05:46Z",
      "side": 1,
      "message": "Why can\u0027t \"remaining boot order\" be stored in dbus objects?  Is this a problem where the dbus object hasn\u0027t been properly defined?  Can\u0027t we make proposals to get this cleaned up then?  I\u0027d like to not have this magic OEM file because it means you cannot use Redfish to configure it (for example).",
      "parentUuid": "ad4576a4_beb0147e",
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fabac749_e9278171",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 634,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2021-01-22T11:00:39Z",
      "side": 1,
      "message": "From my understanding, there is limitation in dbus-interfaces, so I have updated 2 data values. If there is dbus-interfaces available, we can add it in there. Please provide your suggestions on this.\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/tree/master/xyz/openbmc_project/Control/Boot",
      "parentUuid": "459aad08_7f519402",
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd535dc3_756bbc11",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 645,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-01-11T22:59:10Z",
      "side": 1,
      "message": "Why are you using string comparison for a number?",
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10f35425_41c5c4e2",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 645,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2021-01-19T08:10:41Z",
      "side": 1,
      "message": "I will update this.",
      "parentUuid": "fd535dc3_756bbc11",
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7582af8d_b2e30c84",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 669,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-01-11T22:59:10Z",
      "side": 1,
      "message": "Don\u0027t you need to confirm that hostIdx \u003c INSTANCES?\n\nDo we even need INSTANCES to be an integer?  Can we use the same OBMC_HOST_INSTANCES variable we use elsewhere?",
      "range": {
        "startLine": 666,
        "startChar": 0,
        "endLine": 669,
        "endChar": 5
      },
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8553897_d8a24802",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 669,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2021-01-19T08:10:41Z",
      "side": 1,
      "message": "Yes, I will add the condition to confirm the INSTANCES.\nOBMC_HOST_INSTANCES is passed as arguments in Cmakelists from bb file.",
      "parentUuid": "7582af8d_b2e30c84",
      "range": {
        "startLine": 666,
        "startChar": 0,
        "endLine": 669,
        "endChar": 5
      },
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7e2ca0b_dea41b23",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 672,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-01-11T22:59:10Z",
      "side": 1,
      "message": "Why is this capitalized?",
      "range": {
        "startLine": 672,
        "startChar": 16,
        "endLine": 672,
        "endChar": 30
      },
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0e18c4e_031dcfab",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 672,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2021-01-19T08:10:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f7e2ca0b_dea41b23",
      "range": {
        "startLine": 672,
        "startChar": 16,
        "endLine": 672,
        "endChar": 30
      },
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27c10dbd_3d485c5f",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 694,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-01-11T22:59:10Z",
      "side": 1,
      "message": "I\u0027m having trouble reading this code, but I think you\u0027re resetting the \"one-time\" setting?  Two suggestions:\n\n- Please move to the end after setBootOrder because if setBootOrder is unsuccessful we don\u0027t want to clear the one-time.\n\n- Please check the logic because I don\u0027t think it is correct.  My reading is that the logic is currently \"if one time is not enabled, set one time enabled for *next* call\" but I think it should be \"if one time *is* enabled, clear it\".",
      "range": {
        "startLine": 690,
        "startChar": 0,
        "endLine": 694,
        "endChar": 5
      },
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f61ac825_bceeb869",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 694,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2021-01-19T08:10:41Z",
      "side": 1,
      "message": "Sure, I will update this.",
      "parentUuid": "27c10dbd_3d485c5f",
      "range": {
        "startLine": 690,
        "startChar": 0,
        "endLine": 694,
        "endChar": 5
      },
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e058fbe7_772c9169",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 781,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-01-11T22:59:10Z",
      "side": 1,
      "message": "Why look in the \u0027oemData\u0027 anymore?",
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd446e71_1f8e7fa8",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 781,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2021-01-19T08:10:41Z",
      "side": 1,
      "message": "We can set/get Boot Mode and Boot Source in settings service, but remaining boot order cannot be stored in dbus objects, so we are storing those boot order in oemData.",
      "parentUuid": "e058fbe7_772c9169",
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a8cc7fa_8db15666",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 1887,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-01-11T22:59:10Z",
      "side": 1,
      "message": "Why were these removed from the \u0027PrintAndRegister\u0027 calls above?",
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0a127e2_21d00f11",
        "filename": "src/oemcommands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 1887,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2021-01-19T08:10:41Z",
      "side": 1,
      "message": "I changed PrintAndRegister to new registerhandler to manage the optional parameter like hostIdx to get the host option.",
      "parentUuid": "5a8cc7fa_8db15666",
      "revId": "be68ca3a9d09d41f799d8a6a168b39e831391dc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}